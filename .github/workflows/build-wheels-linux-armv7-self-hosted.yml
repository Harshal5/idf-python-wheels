name: armv7-dispatch

on:
  workflow_dispatch:
    inputs:
      IDF_branch:
        description: 'Wheels will be built for this branch'
        required: false
        default: 'master'

jobs:
  build-python-wheels:
    name: Build Python Wheels for linux-armv7
    runs-on: linux-armv7-self-hosted
    strategy:
      matrix:
        python-version: ['3.7, 3.8, 3.9, 3.10']
    container:
      image: python:${{ matrix.python-version }}-bullseye
      options: --privileged
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install stable Rust with clippy and rustfmt
        uses: actions-rs/toolchain@v1
        with:
         profile: default
         toolchain: stable
         components: rustfmt, clippy
      - name: Rust version
        run: rustc --version
      - name: Prepare download folder
        run: mkdir download
      - name: Install build dependencies
        run: python3 -m pip install wheel
      - name: Build wheels for IDF master
        env:
          PIP_EXTRA_INDEX_URL: "https://www.piwheels.org/simple"
        shell: pwsh
        run: |
          $env:PATH+=":/home/pi/.cargo/bin"
          .\Build-Wheels.ps1 -Branch ${{ github.event.inputs.IDF_branch }} -CompileWheels @("greenlet==1.0.0", "gevent==1.5.0", "cryptography", "windows-curses")
      - name: Test wheels by installation
        shell: pwsh
        run: .\Test-Wheels.ps1 -Branch ${{ github.event.inputs.IDF_branch }}
      - name: Upload Release Asset To test s3
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_DEFAULT_REGION: ${{ secrets.AWS_DEFAULT_REGION }}
          AWS_BUCKET: ${{ secrets.DL_BUCKET }}
          PREFIX: 'pypi'
        shell: bash
        run: |
          chmod +x Upload-Wheels.sh
          pip3 install boto3
          ./Upload-Wheels.sh $AWS_BUCKET
          python3 create_index_pages.py $AWS_BUCKET